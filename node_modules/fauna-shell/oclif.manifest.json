{
  "version": "1.1.0",
  "commands": {
    "add-endpoint": {
      "id": "add-endpoint",
      "description": "\nAdds a connection endpoint for Fauna.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna add-endpoint https://db.fauna.com:443",
        "$ fauna add-endpoint http://localhost:8443/ --alias localhost --key secret"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "alias": {
          "name": "alias",
          "type": "option",
          "description": "Fauna server endpoint alias",
          "required": false,
          "multiple": false
        },
        "key": {
          "name": "key",
          "type": "option",
          "description": "Fauna server endpoint key",
          "required": false,
          "multiple": false
        }
      },
      "args": {
        "endpoint": {
          "name": "endpoint",
          "description": "Fauna server endpoint",
          "required": true
        }
      }
    },
    "cloud-login": {
      "id": "cloud-login",
      "description": "Adds a Fauna endpoint.",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna cloud-login"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {}
    },
    "create-database": {
      "id": "create-database",
      "description": "\nCreates a database\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna create-database dbname"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "database name",
          "required": true
        }
      }
    },
    "create-key": {
      "id": "create-key",
      "description": "\nCreates a key for the specified database\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna create-key dbname admin"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "database name",
          "required": true
        },
        "role": {
          "name": "role",
          "description": "key user role",
          "options": [
            "admin",
            "server",
            "server-readonly",
            "client"
          ]
        }
      }
    },
    "default-endpoint": {
      "id": "default-endpoint",
      "description": "\nSets an endpoint as the default one\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna default-endpoint endpoint"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "endpoint_alias": {
          "name": "endpoint_alias",
          "description": "Fauna server endpoint alias",
          "required": true
        }
      }
    },
    "delete-database": {
      "id": "delete-database",
      "description": "\nDeletes a database\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna delete-database dbname"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "database name",
          "required": true
        }
      }
    },
    "delete-endpoint": {
      "id": "delete-endpoint",
      "description": "\nDeletes a connection endpoint.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna delete-endpoint endpoint_alias"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "endpoint_alias": {
          "name": "endpoint_alias",
          "description": "Fauna server endpoint alias",
          "required": true
        }
      }
    },
    "delete-key": {
      "id": "delete-key",
      "description": "\nDeletes a key\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna delete-key 123456789012345678"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {
        "keyname": {
          "name": "keyname",
          "description": "key name",
          "required": true
        }
      }
    },
    "eval": {
      "id": "eval",
      "description": "\nDeprecated: fauna run-queries is deprecated. Use eval instead\nRuns the queries found on the file passed to the command.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna eval \"Collection.all()\"",
        "$ fauna eval nestedDbName \"Collection.all()\"",
        "$ fauna eval --file=/path/to/queries.fql",
        "$ echo \"1 + 1\" | fauna eval",
        "$ fauna eval \"2 + 3\" --output=/tmp/result\"",
        "$ fauna eval \"2 + 3\" --format=json --output=/tmp/result\""
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "file": {
          "name": "file",
          "type": "option",
          "description": "File where to read queries from",
          "multiple": false
        },
        "stdin": {
          "name": "stdin",
          "type": "boolean",
          "description": "Read file input from stdin. Writes to stdout by default",
          "allowNo": false
        },
        "output": {
          "name": "output",
          "type": "option",
          "description": "File to write output to",
          "multiple": false,
          "default": null
        },
        "format": {
          "name": "format",
          "type": "option",
          "description": "Output format",
          "multiple": false,
          "options": [
            "json",
            "json-tagged",
            "shell"
          ]
        },
        "version": {
          "name": "version",
          "type": "option",
          "description": "FQL Version",
          "multiple": false,
          "options": [
            "4",
            "10"
          ],
          "default": "10"
        },
        "typecheck": {
          "name": "typecheck",
          "type": "boolean",
          "description": "Enable typechecking",
          "allowNo": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "Database name",
          "required": false
        },
        "query": {
          "name": "query",
          "description": "FQL query to execute",
          "required": false
        }
      }
    },
    "import": {
      "id": "import",
      "description": "Import data to Fauna",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "You can combine the options in any manner of you're choosing (although type translations cannot be applied to JSON or JSONL files). Below are examples.",
        "\n ... File import examples",
        "",
        "\nImport a file into a new collection - given the same name as the file:",
        "$ fauna import --path ./collection_name.csv",
        "\nAppend a file into a pre-existing collection - having the same name as the file:",
        "$ fauna import --append --path ./collection.csv",
        "\nImport a file into a new collection named \"SampleCollection\" in the child database \"sampleDB\":",
        "$ fauna import --db=sampleDB --collection=SampleCollection --path ./datafile.csv",
        "\nImport a file into a new collection named \"SampleCollection\" in the child database \"sampleDB\":",
        "$ fauna import --type=iso8601_date::dateString --type=hdr2::number --type=hdrX::bool --path ./collection.csv",
        "",
        " ... Directory import examples",
        "",
        "Import a directory - creating a new collection \"SampleCollection\" with data from every file in the directory:",
        "$ fauna import --path ./my_directory --collection=SampleCollection",
        "\nImport a directory - creating appending to the pre-existing collection \"SampleCollection\" with data from every file in the directory:",
        "$ fauna import --path ./my_directory --collection=SampleCollection --append",
        "\nImport a directory - creating creating a new collection named after the file name of each file:",
        "$ fauna import --path ./my_directory",
        "\nImport a directory - creating appending to pre-existing collections named after the file name of each file:",
        "$ fauna import --path ./my_directory --append"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "path": {
          "name": "path",
          "type": "option",
          "description": "Path to .csv/.json file, or path to folder containing .csv/.json files. if the path is to a folder, sub-folders will be skipped.",
          "required": true,
          "multiple": false
        },
        "db": {
          "name": "db",
          "type": "option",
          "description": "Child database name; imported documents are stored in this database",
          "multiple": false
        },
        "collection": {
          "name": "collection",
          "type": "option",
          "description": "Collection name. When not specified, the collection name is the filename.",
          "required": false,
          "multiple": false
        },
        "type": {
          "name": "type",
          "type": "option",
          "description": "Column type casting - converts the column value to a Fauna type. Available only in CSVs; will be ignored in json/jsonl inputs. Null values will be treated as null and no conversion will be performed.\nFormat: <column>::<type>\n<column>: the name of the column to cast values\n<type>: one of\n\t'number' - convert string to number\n\t'bool' - convert 'true', 't', 'yes', or '1' to true and all other values to false (saving null which will be treated as null)\n\t'dateString' - convert a ISO-8601 or RFC-2822 date string to a Fauna Time; will make a best effort on other formats,\n\t'dateEpochMillis' - converts milliseconds since the epoch to a Fauna Time\n\t'dateEpochSeconds' - converts seconds since the epoch to a Fauna Time",
          "multiple": true
        },
        "append": {
          "name": "append",
          "type": "boolean",
          "description": "Allows appending documents to a non-empty collection",
          "allowNo": false
        },
        "allow-short-rows": {
          "name": "allow-short-rows",
          "type": "boolean",
          "description": "Allows rows which are shorter than the number of headers",
          "allowNo": false
        },
        "dry-run": {
          "name": "dry-run",
          "type": "boolean",
          "description": "Dry run the import - committing no documents to Fauna but converting all items to Fauna's format and applying all requested --type conversions. Enables you to detect issues with your file(s) before writing to your collection(s).",
          "allowNo": false
        },
        "treat-empty-csv-cells-as": {
          "name": "treat-empty-csv-cells-as",
          "type": "option",
          "description": "Treat empty csv cells as empty strings or null, default is null.",
          "multiple": false,
          "options": [
            "empty",
            "null"
          ],
          "default": "null"
        }
      },
      "args": {}
    },
    "list-databases": {
      "id": "list-databases",
      "description": "\nLists child databases in the current database\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna list-databases"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {}
    },
    "list-endpoints": {
      "id": "list-endpoints",
      "description": "\nLists connection endpoints.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna list-endpoints"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {}
    },
    "list-keys": {
      "id": "list-keys",
      "description": "\nList keys in the current database or in its child databases\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna list-keys"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        }
      },
      "args": {}
    },
    "run-queries": {
      "id": "run-queries",
      "description": "\nDeprecated: fauna run-queries is deprecated. Use eval instead\nRuns the queries found on the file passed to the command.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna run-queries dbname --file=/path/to/queries.fql"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "file": {
          "name": "file",
          "type": "option",
          "description": "File where to read queries from",
          "required": true,
          "multiple": false
        },
        "stdin": {
          "name": "stdin",
          "type": "boolean",
          "description": "Read file input from stdin. Writes to stdout by default",
          "allowNo": false
        },
        "output": {
          "name": "output",
          "type": "option",
          "description": "File to write output to",
          "multiple": false,
          "default": null
        },
        "format": {
          "name": "format",
          "type": "option",
          "description": "Output format",
          "multiple": false,
          "options": [
            "json",
            "json-tagged",
            "shell"
          ]
        },
        "version": {
          "name": "version",
          "type": "option",
          "description": "FQL Version",
          "multiple": false,
          "options": [
            "4",
            "10"
          ],
          "default": "10"
        },
        "typecheck": {
          "name": "typecheck",
          "type": "boolean",
          "description": "Enable typechecking",
          "allowNo": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "Database name",
          "required": false
        },
        "query": {
          "name": "query",
          "description": "FQL query to execute",
          "required": false
        }
      }
    },
    "shell": {
      "id": "shell",
      "description": "\nStarts an interactive shell.\n",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna shell dbname"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "file": {
          "name": "file",
          "type": "option",
          "description": "File where to read queries from",
          "multiple": false
        },
        "stdin": {
          "name": "stdin",
          "type": "boolean",
          "description": "Read file input from stdin. Writes to stdout by default",
          "allowNo": false
        },
        "output": {
          "name": "output",
          "type": "option",
          "description": "File to write output to",
          "multiple": false,
          "default": null
        },
        "format": {
          "name": "format",
          "type": "option",
          "description": "Output format",
          "multiple": false,
          "options": [
            "json",
            "json-tagged",
            "shell"
          ]
        },
        "version": {
          "name": "version",
          "type": "option",
          "description": "FQL Version",
          "multiple": false,
          "options": [
            "4",
            "10"
          ],
          "default": "10"
        },
        "typecheck": {
          "name": "typecheck",
          "type": "boolean",
          "description": "Enable typechecking",
          "allowNo": false
        }
      },
      "args": {
        "dbname": {
          "name": "dbname",
          "description": "database name",
          "required": false
        }
      }
    },
    "upload-graphql-schema": {
      "id": "upload-graphql-schema",
      "description": "Upload GraphQL schema",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna upload-graphql-schema ./schema.gql",
        "$ fauna upload-graphql-schema ./schema.gql --mode override"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "graphqlHost": {
          "name": "graphqlHost",
          "type": "option",
          "description": "The Fauna GraphQL API host",
          "multiple": false
        },
        "graphqlPort": {
          "name": "graphqlPort",
          "type": "option",
          "description": "GraphQL port",
          "multiple": false
        },
        "mode": {
          "name": "mode",
          "type": "option",
          "description": "Upload mode",
          "multiple": false,
          "options": [
            "merge",
            "override",
            "replace"
          ],
          "default": "merge"
        }
      },
      "args": {
        "graphqlFilePath": {
          "name": "graphqlFilePath",
          "description": "Path to GraphQL schema",
          "required": true
        }
      }
    },
    "schema:diff": {
      "id": "schema:diff",
      "description": "Print the diff between local and remote schema",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna schema diff --dir schemas/myschema"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "dir": {
          "name": "dir",
          "type": "option",
          "description": "The directory of .fsl files to push",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "schema:pull": {
      "id": "schema:pull",
      "description": "Pull a database schema's .fsl files into a directory",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna schema pull --dir schemas/myschema"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "delete": {
          "name": "delete",
          "type": "boolean",
          "description": "Delete .fsl files in the target directory that are not part of the database schema",
          "allowNo": false
        },
        "dir": {
          "name": "dir",
          "type": "option",
          "description": "The target directory",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "schema:push": {
      "id": "schema:push",
      "description": "Push a directory of .fsl files to Fauna",
      "strict": true,
      "pluginName": "fauna-shell",
      "pluginAlias": "fauna-shell",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ fauna schema push --dir schemas/myschema"
      ],
      "flags": {
        "domain": {
          "name": "domain",
          "type": "option",
          "description": "Fauna server domain",
          "multiple": false
        },
        "scheme": {
          "name": "scheme",
          "type": "option",
          "description": "Connection scheme",
          "multiple": false,
          "options": [
            "https",
            "http"
          ]
        },
        "port": {
          "name": "port",
          "type": "option",
          "description": "Connection port",
          "multiple": false
        },
        "timeout": {
          "name": "timeout",
          "type": "option",
          "description": "Connection timeout in milliseconds",
          "multiple": false
        },
        "secret": {
          "name": "secret",
          "type": "option",
          "description": "Fauna secret key",
          "multiple": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "option",
          "description": "Fauna server endpoint",
          "multiple": false
        },
        "force": {
          "name": "force",
          "type": "boolean",
          "description": "Push the change without a diff or schema version check",
          "allowNo": false
        },
        "dir": {
          "name": "dir",
          "type": "option",
          "description": "The directory of .fsl files to push",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    }
  }
}